<?php
/**
 * @link https://clearbold.com
 * @copyright Copyright (c) Clearbold, LLC.
 * @license https://craftcms.github.io/license/
 */

namespace clearbold\colorpalette\migrations;

use Craft;
use craft\db\Migration;
use craft\helpers\MigrationHelper;

/**
 * Installation Migration
 *
 * @author Mark Reeves, Clearbold, LLC <hello@clearbold.com>
 * @since 0.0.4
 */
class Install extends Migration
{
    /**
     * @inheritdoc
     */
    public function safeUp(): bool
    {
        //$this->dropForeignKeys(); // For dev
        //$this->dropTables(); // For dev
        $this->createTables();
        $this->createIndexes();
        $this->addForeignKeys();

        return true;
    }

    /**
     * @inheritdoc
     */
    public function safeDown()
    {
        $this->dropForeignKeys();
        $this->dropTables();
        $this->dropProjectConfig();

        return true;
    }

    public function createTables()
    {
        $this->createTable('{{%colorpalette_collections}}', [
            'id' => $this->primaryKey(),
            'guid' => $this->string(), //generated by UI, unique
            'name' => $this->string(),
            'handle' => $this->string(),
            'dateCreated' => $this->dateTime()->notNull(),
            'dateUpdated' => $this->dateTime()->notNull(),
            'uid' => $this->uid()
        ]);

        $this->createTable('{{%colorpalette_themes}}', [
            'id' => $this->primaryKey(),
            'collectionId' => $this->integer(),
            'guid' => $this->string(), //generated by UI, unique
            'name' => $this->string(),
            'handle' => $this->string(),
            'dateCreated' => $this->dateTime()->notNull(),
            'dateUpdated' => $this->dateTime()->notNull(),
            'uid' => $this->uid()
        ]);

        $this->createTable('{{%colorpalette_colors}}', [
            'id' => $this->primaryKey(),
            'themeId' => $this->integer(),
            'guid' => $this->string(), //generated by UI, unique
            'name' => $this->string(),
            'handle' => $this->string(),
            'color' => $this->string(),
            'alpha' => $this->float(),
            'dateCreated' => $this->dateTime()->notNull(),
            'dateUpdated' => $this->dateTime()->notNull(),
            'uid' => $this->uid()
        ]);
    }

    public function dropTables()
    {
        $this->dropTableIfExists('{{%colorpalette_colors}}');
        $this->dropTableIfExists('{{%colorpalette_themes}}');
        $this->dropTableIfExists('{{%colorpalette_collections}}');
    }

    public function createIndexes()
    {
        $this->createIndex(null, '{{%colorpalette_collections}}', 'guid', true);
        $this->createIndex(null, '{{%colorpalette_themes}}', 'guid', true);
        $this->createIndex(null, '{{%colorpalette_colors}}', 'guid', true);
    }

    public function addForeignKeys()
    {
        $this->addForeignKey(null, '{{%colorpalette_themes}}', ['collectionId'], '{{%colorpalette_collections}}', ['id'], 'CASCADE', 'CASCADE');
        $this->addForeignKey(null, '{{%colorpalette_colors}}', ['themeId'], '{{%colorpalette_themes}}', ['id'], 'CASCADE', 'CASCADE');
    }

    public function dropForeignKeys()
    {
        if ($this->_tableExists('{{%colorpalette_colors}}')) {
            MigrationHelper::dropAllForeignKeysToTable('{{%colorpalette_colors}}', $this);
        }
        if ($this->_tableExists('{{%colorpalette_themes}}')) {
            MigrationHelper::dropAllForeignKeysToTable('{{%colorpalette_themes}}', $this);
        }
    }

    public function dropProjectConfig()
    {
        Craft::$app->projectConfig->remove('colorpalette');
    }

    private function _tableExists(string $tableName): bool
    {
        $schema = $this->db->getSchema();
        $schema->refresh();

        $rawTableName = $schema->getRawTableName($tableName);
        $table = $schema->getTableSchema($rawTableName);

        return (bool)$table;
    }
}